def counterfeit(coin, &spend)
  spend.(coin)
  def coin.singleton_class; nil.singleton_class; end
  spend.(nil)
end

#Evgenys way ^

#other cool ways
#1
def counterfeit(coin, &spend)
  spend.(coin)
  spend.(SilverFoil.new(coin))
end

class SilverFoil
  def initialize(c)
    @c = c
  end

  def singleton_class
    @c.singleton_class
  end

  def to_s
    super + ' World'
  end
end

#2

def counterfeit(coin, &spend)
  fake_coin = Object.new
  class << fake_coin
    def self.==(other)
      true
    end
  end

  spend.(coin)
  spend.(fake_coin)
end

#3

def counterfeit(coin, &spend)
  @cls = coin.singleton_class

  coin.instance_exec do
    def singleton_class
      @cls
    end
  end
  spend.(coin)
  spend.(coin.clone)
end

#4
module Kernel
  def raise(*args)
    return
  end
end

def counterfeit( coin , &spend)
  spend.(coin)
  spend.(coin)
end


names = [ "Hello", "there", "I'm", "fine"]

